{"config":{"lang":["en"],"separator":"[\\s\\-]+"},"docs":[{"title":"Core","text":"<p>DataJoint Core projects are fully open-source and are built to develop, define, manage, and visualize data pipelines. Below are the projects that make up the family of core open-source projects.</p>","location":"core/"},{"title":"API's","text":"<ul> <li> DataJoint Python <p>A low-level client for managing data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> DataJoint MATLAB <p>A low-level client for managing data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> Pharus <p>Expose data pipelines via a REST interface.</p> <p> Getting started</p> </li> </ul>","location":"core/#apis"},{"title":"Web GUI's","text":"<ul> <li> LabBook <p>Data entry and data model browsing for data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> SciViz <p>A visualization framework for making low-code web apps for data pipelines.</p> <p> Getting started</p> </li> </ul>","location":"core/#web-guis"},{"title":"Container Images","text":"<pre><code>graph\n  datajoint/mysql;\n  datajoint/miniconda3 --&gt; datajoint/djbase;\n  datajoint/djbase --&gt; datajoint/djtest;\n  datajoint/djbase --&gt; datajoint/datajoint;\n  datajoint/djbase --&gt; datajoint/djlab;\n  datajoint/djlab --&gt; datajoint/djlabhub;</code></pre>  <ul> <li> datajoint/mysql <p>An optimized, MySQL backend for data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/miniconda3 <p>A minimal Python image with conda.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/djbase <p>Adds only dependencies for managing data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/djtest <p>Adds testing tools like pytest.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/datajoint <p>Official image for managing data pipelines.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/djlab <p>Adds a local Jupyter Lab environment.</p> <p> Getting started</p> </li> </ul> <ul> <li> datajoint/djlabhub <p>Adds a client to allow hosting with Jupyter Hub.</p> <p> Getting started</p> </li> </ul>","location":"core/#container-images"},{"title":"Elements","text":"<p>Below are the projects that make up the family of open-source DataJoint Elements:</p>","location":"elements/"},{"title":"Neuroscience","text":"<ul> <li>Ephys: Neuropixels analysis with Kilosort</li> </ul>","location":"elements/#neuroscience"},{"title":"Glossary","text":"<p>There are many terms that are reused throughout the documentation that we feel important to define together. We've taken careful consideration to be consistent. Below you will find how we've understood and use these terms.</p>    Term Definition     data pipeline formal definition of a DAG of processes that achieves the DataJoint Mantra","location":"glossary/"},{"title":"Howdy","text":"<p>Welcome to the home for DataJoint documentation. Here we'll help get you to the right place quickly.</p> <p></p> <p>The DataJoint ecosystem is divided into 2 distinct areas:</p> <p></p> <p>Core: Fully open-source projects built and designed specifically to support the DataJoint Mantra.</p> <p>Elements: Fully open-source, domain-specific projects built with DataJoint Core. Currently, these are primarily focused on Neuroscience.</p>","location":"welcome/"},{"title":"Contribution Guidelines","text":"<p>Thank you for your interest in contributing! \ud83e\udd1d</p> <p>To help keep everyone in alignment and coordinated in the community effort, we\u2019ve created this document. It serves as the contribution guideline that outlines how open-source software development is to be conducted. Any software development that makes reference to this document can be assumed to adopt the policies outlined below. We\u2019ve structured the guideline in a FAQ (frequently asked questions) format to make it easier to digest. Feel free to review the questions below to determine any specific policy.</p> <p>The principal maintainer of DataJoint and associated tools is the DataJoint company. The pronouns \u201cwe\u201d and \u201cus\u201d in this guideline refer to the principal maintainers. We invite reviews and contributions of the open-source software. We compiled these guidelines to make this work clear and efficient.</p>","location":"community/contribution/"},{"title":"1) Which issue should I contribute towards?","text":"<p>There are three primary things to consider when looking to contribute.</p> <p>Availability: An indication of whether anyone is currently working on a fix for the given issue. Availability is indicated by who is <code>assigned</code>. Issues that are <code>unassigned</code> mean that there is no one yet working on resolving the issue and the issue is available for someone to work on. If an issue has been assigned, then any additional work on that issue should be coordinated with the assignee.</p> <p>Specification: In order for issues to be properly addressed, the requirements of satisfying and closing the issue should be clear. If it is not, a label will be added as <code>unspecified</code>. This could be due to more debug info being necessary, more details on intended behavior, or perhaps that further discussion is required to determine a good solution. Feel free to help us arrive at a proper specification.</p> <p>Priority: As a community, we work on a concerted effort to bring about the realization of the milestones. We utilize milestones as a planning tool to help focus a group of changes around a release. To determine the priority of issues, simply have a look at the next milestone that is expected to arrive. Therefore, each milestone following this can be understood as lower in priority respectively. Bear in mind that much like a hurricane forecast, the execution plan is much more likely to be accurate the closer to today\u2019s date as opposed to milestones further out. Extremely low priority issues are assigned to the <code>Backburner</code> milestone. Since <code>Backburner</code> does not have a target date, this indicates that its issues may be deferred indefinitely. Occasionally the maintainers will move issues from <code>Backburner</code> as it makes sense to address them within a release. Also, issues <code>unassigned</code> to a milestone can be understood as new issues which have not been triaged.</p> <p>After considering the above, you may comment on the issue you\u2019d like to help fix and a maintainer will assign it to you.</p>","location":"community/contribution/#1-which-issue-should-i-contribute-towards"},{"title":"2) What is the proper etiquette for proposing changes as contribution?","text":"<p>What is generally expected from new contributions are the following:</p> <p>Any proposed contributor changes should be introduced in the form of a pull request (PR) from their fork.</p> <p>Proper branch target specified. The following are the generally the available branches that can be targeted:</p> <ul> <li><code>main</code> or <code>master</code>: Represents the single source of truth and the latest in completed development.</li> </ul> <ul> <li><code>pre</code>: Represents the source at the point of the last stable release.</li> </ul> <p>For larger more involved changes, a maintainer may determine it best to create a feature-specific branch and adjust the PR accordingly.</p> <p>A summary description that describes the overall intent behind the PR.</p> <p>Proper links to the issue(s) that the PR serves to resolve.</p> <p>Newly introduced changes must pass any required checks. Typically as it relates to tests, this means:</p> <ol> <li>No syntax errors</li> <li>No integration errors</li> <li>No style errors e.g. PEP8, etc.</li> <li>Similar or better code coverage</li> </ol> <p>Additional documentation to reflect new feature or behavior introduced.</p> <p>Necessary updates to the changelog following Keep a Changelog convention.</p> <p>A contributor should not approve or merge their own PR.</p> <p>Reviewer suggestions or feedback should not be directly committed to a branch on a contributor\u2019s fork. A less intrusive way to collaborate would be for the reviewer to PR to the contributor\u2019s fork/branch that is associated with the main PR currently in review.</p> <p>Maintainers will also ensure that PR\u2019s have the appropriate assignment for reviewer, milestone, and project.</p>","location":"community/contribution/#2-what-is-the-proper-etiquette-for-proposing-changes-as-contribution"},{"title":"3) How can I track the progress of an issue that has been assigned?","text":"<p>Since milestones represent the development plan, projects represent the actual execution. Projects are typically fixed-time sprints (1-2 weeks). A \u2018workable\u2019 number of issues that have been assigned to developers and assigned to the next milestone are selected and tracked in each project to provide greater granularity in the week-to-week progress. Automation is included observing the <code>Automated kanban with reviews</code> template. Maintainers will adjust the project assignment to reflect the order in which to resolve the milestone issues.</p>","location":"community/contribution/#3-how-can-i-track-the-progress-of-an-issue-that-has-been-assigned"},{"title":"4) What is the release process? How do I know when my merged contribution will officially make it into a release?","text":"<p>Releases follow the standard definition of semantic versioning. Meaning:</p> <p><code>MAJOR</code> . <code>MINOR</code> . <code>PATCH</code></p> <ul> <li><code>MAJOR</code> version when you make incompatible API changes,</li> </ul> <ul> <li><code>MINOR</code> version when you add functionality in a backwards compatible manner, and</li> </ul> <ul> <li><code>PATCH</code> version when you make backwards compatible bug fixes.</li> </ul> <p>Each release requires tagging the commit appropriately and is then issued in the normal medium for release e.g. PyPi, NPM, YARN, GitHub Release, etc.</p> <p>Minor releases are triggered when all the issues assigned to a milestone are resolved and closed. Patch releases are triggered periodically from <code>main</code> or <code>master</code> after a reasonable number of PR merges have come in.</p>","location":"community/contribution/#4-what-is-the-release-process-how-do-i-know-when-my-merged-contribution-will-officially-make-it-into-a-release"},{"title":"5) I am not yet too comfortable contributing but would like to engage the community. What is the policy on community engagement?","text":"<p>In order to follow the appropriate process and setting, please reference the following flow for your desired mode of engagement:</p>","location":"community/contribution/#5-i-am-not-yet-too-comfortable-contributing-but-would-like-to-engage-the-community-what-is-the-policy-on-community-engagement"},{"title":"5a) Generally, how do I perform ____?","text":"<p>If the documentation does not provide clear enough instruction, please see StackOverflow posts related to the datajoint tag or ask a new question tagging it appropriately. You may refer to our datajoint tag wiki for more details on its proper use.</p>","location":"community/contribution/#5a-generally-how-do-i-perform-____"},{"title":"5b) I just encountered this error, how can I resolve it?","text":"<p>Please see StackOverflow posts related to the datajoint tag or ask a new question tagging it appropriately. You may refer to our datajoint tag wiki for more details on its proper use.</p>","location":"community/contribution/#5b-i-just-encountered-this-error-how-can-i-resolve-it"},{"title":"5c) I just encountered this error and I am sure it is a bug, how do I report it?","text":"<p>Please file it under the issue tracker associated with the open-source software.</p>","location":"community/contribution/#5c-i-just-encountered-this-error-and-i-am-sure-it-is-a-bug-how-do-i-report-it"},{"title":"5d) I have an idea or new feature request, how do I submit it?","text":"<p>Please file it under the issue tracker associated with the open-source software.</p>","location":"community/contribution/#5d-i-have-an-idea-or-new-feature-request-how-do-i-submit-it"},{"title":"5e) I am curious why the maintainers choose to ____? i.e. questions that are \u2018opinionated\u2019 in nature with answers that some might disagree.","text":"<p>Please join the community on the DataJoint Slack and ask on the most relevant channel. There, you may engage directly with the maintainers for proper discourse.</p>","location":"community/contribution/#5e-i-am-curious-why-the-maintainers-choose-to-____-ie-questions-that-are-opinionated-in-nature-with-answers-that-some-might-disagree"},{"title":"5f) What is the timeline or roadmap for the release of certain supported features?","text":"<p>Please refer to milestones and projects associated with the open-source software.</p>","location":"community/contribution/#5f-what-is-the-timeline-or-roadmap-for-the-release-of-certain-supported-features"},{"title":"5g) I need urgent help best suited for live debugging, how can I reach out directly?","text":"<p>Please join the community on the DataJoint Slack and ask on the most relevant channel. Please bear in mind that as open-source community software, availability of the maintainers might be limited.</p>","location":"community/contribution/#5g-i-need-urgent-help-best-suited-for-live-debugging-how-can-i-reach-out-directly"},{"title":"Mantra","text":"<p>The DataJoint Mantra consists of three main objectives:</p> <ul> <li>Simplify your queries through an intuitive query language.</li> <li>Make automated, reproducible computation by integrating computation with the data model.</li> <li>Ensure validity of your data through referential integrity.</li> </ul>","location":"concepts/mantra/"},{"title":"Query Language","text":"<p>Writing good, optimized SQL queries can be difficult and often becomes a barrier for individuals lacking experience in computer science and programming. That said, we don't feel this should discourage the use of databases. Databases help to structure our daily lives which streamlines the time required to glean insights and build robust applications from truth. SQL is powerful but requires practice which we feel is the real fault in the language.</p> <p>To address this, the DataJoint query language serves as a query builder and optimizer for SQL. It leverages the stack's own operator precedence and combines it with both operator overloading and SQL algebra to achieve a more intuitive experience. Additionally, interoperability between Python and MATLAB is crucial due to the diversity of tools available to scientists. So much so that this is a guiding principle in FAIR.</p> <p>Case in point, here is a comparison of equivalent queries:</p> <p>SQL</p> <pre><code>SELECT *\nFROM `shapes`.`rectangle`\nNATURAL JOIN `shapes`.`area`\nWHERE (\n    (`shape_area`=8) AND (`shape_height`=2)\n);\n</code></pre> <p>DataJoint (Python) <pre><code>Rectangle * Area &amp; dict(shape_height=2, shape_area=8)\n</code></pre></p> <p>DataJoint (MATLAB) <pre><code>shapes.Rectangle * shapes.Area &amp; struct('shape_height', 2, 'shape_area', 8)\n</code></pre></p>","location":"concepts/mantra/#query-language"},{"title":"Reproducible Computation","text":"<p>Reproducibility is a key concept within the scientific community since research is largely conducted, shared, and reviewed in the public domain. This is necessary to independently validate discoveries and have others support new findings. Such a practice is well advocated in the scientific community as open science.</p> <p>Yet, reliably reproducing computed results of others has proven difficult since there are many factors that affect the determinism of a process e.g. hardware, software environment, scripts, input data, seeding, etc.</p> <p>DataJoint pipelines address these challenges by allowing computation to be defined such that they are associated with an entity. Drawing relationships between many entities we can create a DAG that describes a compute workflow as an entity-relationship model.</p> <p>For instance, an entity such as <code>Area</code> could represent the computed value of a parent entity, <code>Rectangle</code>. Therefore, we feel it should be reasonable when defining <code>Area</code> to include the specification of a computation that automates how <code>Area</code> is generated based on relation to <code>Rectangle</code>.</p>","location":"concepts/mantra/#reproducible-computation"},{"title":"Referential Integrity","text":"<p>Referential integrity is the concept of keeping all your data consistent and up-to-date. The goal is to ensure data pipelines always reflect the truth of how data was created.</p> <p>In the realm of databases, entities can be related to one another through foreign keys. However, our opinionated view is that foreign keys on primary keys should enforce the contraint.</p> <p>What this means is that our data model always reflects the truth. When a parent entity is removed, all child computed values will also be removed since they no longer have meaning without the subject. There is not a clear way to reproduce the results otherwise.</p> <p>An important consequence to note is that deletes take longer as a result since they must be cascaded down to all the descendants. We believe this to be a feature as it is the behavior most inline with typical expectations. Deletes should be done cautiously. </p>","location":"concepts/mantra/#referential-integrity"},{"title":"Datatypes","text":"<p>Throughout the DataJoint ecosystem, there are several datatypes that are used to define tables with cross-platform support i.e. Python, MATLAB. It is important to understand these types as they can have implications in the queries you form and the capacity of their storage.</p>","location":"concepts/query-lang/datatypes/"},{"title":"Standard Types","text":"<p>These types are largely wrappers around existing types in the current query backend for data pipelines.</p>    Datatype Description Size Example     int integer 4 bytes <code>8</code>","location":"concepts/query-lang/datatypes/#standard-types"},{"title":"Unique Types","text":"Datatype Description Size Example     uuid a unique GUID value 16 bytes <code>6ed5ed09-e69c-466f-8d06-a5afbf273e61</code>","location":"concepts/query-lang/datatypes/#unique-types"},{"title":"Query Backend","text":"<p>Currently, data pipelines use MySQL server for its query backend.</p> <p>The following are some important topics to maintain a healthy system:</p> <ul> <li>Access Control</li> <li>Optimal Server Configuration</li> <li>Maintenance Guidelines</li> </ul>","location":"concepts/ref-integrity/query-backend/"}]}